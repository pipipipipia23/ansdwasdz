if not game:IsLoaded() then game.Loaded:Wait() end
repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui.Main.Right
repeat wait() until game:GetService("Workspace"):FindFirstChild("__MAP")
local plr = game.Players.LocalPlayer
local Client = require(game.ReplicatedStorage.Library.Client)
local v1 = require(game.ReplicatedStorage:WaitForChild("Framework"):WaitForChild("Library"))
local Orbs = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Orbs)
local Lootbags = getsenv(game.Players.LocalPlayer.PlayerScripts.Scripts.Game.Lootbags)
debug.setupvalue(Client.Network.Invoke, 1, function() return true end)
debug.setupvalue(Client.Network.Fire, 1, function() return true end)
local mapList = {}
local getmaptp = game:GetService("Players").LocalPlayer.PlayerGui.Teleport.Frame.LeftContainer.Holder
for i,v in pairs(getmaptp:GetChildren()) do
    if v:IsA("TextButton") and v.Name ~= "WorldTemplate" then
        table.insert(mapList, v.Name)
    end
end
function getmapnek(b)
    return v1.Directory.Areas[b].world
end
function getmap(a)
    Default = 0
    for i,v in pairs(mapList) do
        if mapList[i] == v1.WorldCmds.Get() then
            Default = i
        end
        if Default ~= 0 then
            local up = #mapList - Default
            local down = #mapList - (#mapList - Default)
            upne = 0
            downne = 0
            for q = 1, up do
                upne = upne + 1
                if (mapList[Default + upne]) == getmapnek(a) then
                    return true
                end
            end
            for q = 1, down do
                downne = downne + 1
                if (mapList[Default - downne]) == getmapnek(a) then
                    return false
                end
            end
        end
    end
end

function returnnextmap(a,b)
    if not b then
        if not game:GetService("Workspace").__MAP.Cannons:FindFirstChild(getmapnek(a)) then
            if v1.WorldCmds.Get() ~= "Void" and v1.WorldCmds.Get() ~= "Limbo" and v1.WorldCmds.Get() ~= "Tech" then
                if getmap(a) == true then
                    for i,v in pairs(mapList) do
                        if v == v1.WorldCmds.Get() and getmapnek(a) ~= v1.WorldCmds.Get() then
                            if mapList[i + 1] ~= "Fantasy" then
                                return mapList[i + 1]
                            else
                                return mapList[i + 2]
                            end
                        end
                    end
                end
                if getmap(a) == false then
                    for i,v in pairs(mapList) do
                        if v == v1.WorldCmds.Get() and getmapnek(a) ~= v1.WorldCmds.Get() then
                            return mapList[i - 1]
                        end
                    end
                end
            else
                return "A"
            end
        else
            return getmapnek(a)
        end
    else
        if v1.WorldCmds.Get() ~= "Void" and v1.WorldCmds.Get() ~= "Limbo" and v1.WorldCmds.Get() ~= "Tech" then
            if mapList[i] == v1.WorldCmds.Get() then
                Default = i
            end
            if Default ~= 0 then
                local up = #mapList - Default
                local down = #mapList - (#mapList - Default)
                upne = 0
                downne = 0
                for q = 1, up do
                    upne = upne + 1
                    if game:GetService("Workspace").__MAP.Cannons:FindFirstChild(mapList[Default + upne]) then
                        return mapList[Default + upne]
                    end
                end
                for q = 1, down do
                    downne = downne + 1
                    if game:GetService("Workspace").__MAP.Cannons:FindFirstChild(mapList[Default - downne]) then
                        return mapList[Default - downne]
                    end
                end
            end
        else
            if v1.WorldCmds.Get() == "Void" then
                if not game:GetService("Workspace").__MAP.Cannons:FindFirstChild(getmapnek(a)) then
                    return game:GetService("Workspace").__MAP.Interactive:FindFirstChild("Limbo Portal").CENTER.CFrame
                end
            elseif v1.WorldCmds.Get() == "Limbo" then
                if not game:GetService("Workspace").__MAP.Cannons:FindFirstChild(getmapnek(a)) then
                    return game:GetService("Workspace").__MAP.Interactive:FindFirstChild("Limbo Portal").CENTER.CFrame
                end
            elseif v1.WorldCmds.Get() == "Tech" then
                if not game:GetService("Workspace").__MAP.Cannons:FindFirstChild(getmapnek(a)) then
                    return game:GetService("Workspace").__MAP.Interactive["Hacker Portal"]._INTERACT.CFrame
                end
            end
        end
    end
end

function teleportnow(b)
    if getmapnek(b) ~= v1.WorldCmds.Get() then
        if game:GetService("Workspace").__MAP.Cannons:FindFirstChild(returnnextmap(b)) then
            return returnnextmap(b)
        else
            return returnnextmap(b,true)
        end
    end
end
function click(a)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,true,a,1)
    game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X/2,a.AbsolutePosition.Y+50,0,false,a,1)
end
while true do wait()
    if typeof(teleportnow("Kawaii Tokyo")) ~= "CFrame" then
        plr.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").__MAP.Cannons[teleportnow("Kawaii Tokyo")].CFrame
        wait(1)
        game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
        wait(1)
        game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
    else
        plr.Character.HumanoidRootPart.CFrame = teleportnow("Kawaii Tokyo")
        game:GetService("VirtualInputManager"):SendKeyEvent(true, "E", false, game)
        wait(1)
        game:GetService("VirtualInputManager"):SendKeyEvent(false, "E", false, game)
        wait(1)
        click(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Yes)
    end
end
